name: ETL Report â†’ GitHub Pages

on:
  push:
    branches: [ main ]                # publish on push to main
  schedule:
    - cron: '5 15 * * *'              # daily ~23:05 Asia/Manila
  workflow_dispatch:

# Required permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: etl-report-pages
  cancel-in-progress: true

jobs:
  build-and-generate:
    environment: main                 # <-- your Environment w/ Snowflake secrets & vars
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ACCOUNT: ${{ vars.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_DATABASE: ${{ vars.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_ROLE: ${{ vars.SNOWFLAKE_ROLE }}
      TZ: Asia/Manila
      SPRING_PROFILES_ACTIVE: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Configure Pages (must run before upload/deploy)
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Build Docker image (DockerfileDeploy)
        run: docker build -t ph-shoes-etl:latest -f DockerfileDeploy .

      - name: Start app container
        run: |
          docker run -d --name ph-shoes-etl -p 8080:8080 \
            -e SNOWFLAKE_USER \
            -e SNOWFLAKE_PASSWORD \
            -e SNOWFLAKE_ACCOUNT \
            -e SNOWFLAKE_DATABASE \
            -e SNOWFLAKE_ROLE \
            -e TZ \
            -e SPRING_PROFILES_ACTIVE \
            ph-shoes-etl:latest

      - name: Wait for app
        shell: bash
        run: |
          for i in {1..30}; do
            if curl -fsS "http://localhost:8080/reports/etl?timezone=Asia/Manila" >/dev/null; then exit 0; fi
            if ! docker ps --format '{{.Names}}' | grep -q '^ph-shoes-etl$'; then
              echo "Container exited early"; docker logs ph-shoes-etl || true; exit 1
            fi
            sleep 3
          done
          echo "App did not start"; docker logs ph-shoes-etl || true; exit 1

      - name: Generate site files
        run: |
          mkdir -p public/archive
          TODAY=$(date +'%Y-%m-%d')
          curl -fsS "http://localhost:8080/reports/etl?timezone=Asia/Manila" -o public/index.html
          curl -fsS "http://localhost:8080/api/v1/etl-report?timezone=Asia/Manila" -o public/data.json
          cp public/index.html "public/archive/etl-report-${TODAY}.html"
          cp public/data.json  "public/archive/etl-report-${TODAY}.json"

      # 2) Upload Pages artifact (name defaults to "github-pages")
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
          # artifact_name: github-pages   # (default) leave as-is

      # Optional: also keep a downloadable artifact
      - name: Upload downloadable artifact (14 days)
        uses: actions/upload-artifact@v4
        with:
          name: etl-report-${{ github.run_id }}
          path: public/**
          retention-days: 14

      - name: Stop container
        if: always()
        run: |
          docker stop ph-shoes-etl || true
          docker rm ph-shoes-etl || true

  deploy:
    needs: build-and-generate
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      # 3) Deploy the artifact named "github-pages"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
