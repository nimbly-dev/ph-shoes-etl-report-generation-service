name: Daily ETL Report

on:
  schedule:
    # 15:05 UTC ≈ 23:05 Asia/Manila (UTC+8). Adjust as needed.
    - cron: '5 15 * * *'
  workflow_dispatch:

# Prevent overlapping runs; cancel an in-progress one if a new run starts
concurrency:
  group: daily-etl-report
  cancel-in-progress: true

jobs:
  run-and-save:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    # Read-only is fine; we only upload artifacts
    permissions:
      contents: read

    env:
      # Secrets/vars configured in GitHub → Settings → Environments (or Repo → Settings → Secrets and variables)
      SNOWFLAKE_TOKEN: ${{ secrets.SNOWFLAKE_TOKEN }}          # secret
      SNOWFLAKE_ACCOUNT: ${{ vars.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_DATABASE: ${{ vars.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_SCHEMA: ${{ vars.SNOWFLAKE_SCHEMA }}           # optional; defaults to PUBLIC in app config
      SNOWFLAKE_WAREHOUSE: ${{ vars.SNOWFLAKE_WAREHOUSE }}     # optional; defaults to COMPUTE_WH in app config
      SNOWFLAKE_ROLE: ${{ vars.SNOWFLAKE_ROLE }}               # e.g. SYSADMIN
      TZ: Asia/Manila

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image (DockerfileDeploy)
        run: docker build -t ph-shoes-etl:latest -f DockerfileDeploy .

      - name: Run service container
        run: |
          docker run -d --rm --name ph-shoes-etl -p 8080:8080 \
            -e SNOWFLAKE_TOKEN \
            -e SNOWFLAKE_ACCOUNT \
            -e SNOWFLAKE_DATABASE \
            -e SNOWFLAKE_SCHEMA \
            -e SNOWFLAKE_WAREHOUSE \
            -e SNOWFLAKE_ROLE \
            -e TZ \
            -e SPRING_PROFILES_ACTIVE=prod \
            ph-shoes-etl:latest

      - name: Wait for app to be ready
        shell: bash
        run: |
          set -e
          for i in {1..30}; do
            if curl -fsS "http://localhost:8080/reports/etl?timezone=Asia/Manila" >/dev/null; then
              echo "App is up"; exit 0; fi
            echo "Waiting for app... ($i/30)"; sleep 3
          done
          echo "App did not start in time" >&2; exit 1

      - name: Download HTML + JSON reports
        shell: bash
        run: |
          TODAY=$(date +'%Y-%m-%d')
          curl -fsS "http://localhost:8080/reports/etl?timezone=Asia/Manila" \
            -o "etl-report-${TODAY}.html"
          curl -fsS "http://localhost:8080/api/v1/etl-report?timezone=Asia/Manila" \
            -o "etl-report-${TODAY}.json"
          ls -lh etl-report-*

      - name: Upload artifacts (retain 7 days)
        uses: actions/upload-artifact@v4
        with:
          name: etl-report-${{ github.run_id }}
          path: |
            etl-report-*.html
            etl-report-*.json
          retention-days: 7

      - name: Stop container
        if: always()
        run: docker stop ph-shoes-etl
